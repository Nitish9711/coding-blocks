number of edges a node can have in a graph
max e : nC2 -> o(n2)
min E: n-1 edges(tree)

ways to represent graph
1. adjancey matrix
2. edges and list 

V = {0, 1, 2, 3}
E = [(0,1)(0, 2)(0, 3) (1, 2) ....]
3. adjancey list
0->1,2
1->2
2->1, 3
...

4. implicit graph
2d matrix



=> distance from source to dest in unweighted graph can be calucluated with bfs
snakes and ladders leetcode

dfs forest - group of connected graphs


dijkistra 
priority queue has not the option to update so we use set for storing distance;



spanning trees
it is a tree made from subset of edges that connects all the vertices of graph i.e graph forms a 
single connected component without forming a cycle contains n-1 edges where n is number of vertices


algo

1. kruskal algorithm (greedy algo)
2. prims' algorithm(greedy algo)

kruskal algo
1. sort all the edges on the basisi of their weight
2. pick the edges that does not form a cycle

